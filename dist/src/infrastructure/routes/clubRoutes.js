"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const multer_1 = require("../middleware/multer");
const clubController_1 = __importDefault(require("../../adapters/controllers/clubController"));
const clubRepository_1 = __importDefault(require("../repository/clubRepository"));
const clubUseCase_1 = __importDefault(require("../../useCase/clubUseCase"));
const generateToken_1 = __importDefault(require("../services/generateToken"));
const bcryptPassword_1 = __importDefault(require("../services/bcryptPassword"));
const sendMail_1 = __importDefault(require("../services/sendMail"));
const generateOtp_1 = __importDefault(require("../services/generateOtp"));
const cloudinaryUpload_1 = __importDefault(require("../utils/cloudinaryUpload"));
const clubAuth_1 = require("../middleware/clubAuth");
const fixtureRepository_1 = __importDefault(require("../repository/fixtureRepository"));
const stadiumRepository_1 = __importDefault(require("../repository/stadiumRepository"));
const fixtureUseCase_1 = __importDefault(require("../../useCase/fixtureUseCase"));
const fixtureController_1 = __importDefault(require("../../adapters/controllers/fixtureController"));
const paymentRepository_1 = __importDefault(require("../repository/paymentRepository"));
const scheduleTask_1 = __importDefault(require("../services/scheduleTask"));
const ticketRepository_1 = __importDefault(require("../repository/ticketRepository"));
const userRepository_1 = __importDefault(require("../repository/userRepository"));
const repository = new clubRepository_1.default();
const fixtureRepository = new fixtureRepository_1.default();
const stadiumRepository = new stadiumRepository_1.default();
const paymentRepository = new paymentRepository_1.default();
const ticketRepository = new ticketRepository_1.default();
const userRepository = new userRepository_1.default();
const encrypt = new bcryptPassword_1.default();
const token = new generateToken_1.default();
const otp = new generateOtp_1.default();
const email = new sendMail_1.default();
const cloudinary = new cloudinaryUpload_1.default();
const schedule = new scheduleTask_1.default();
const clubCase = new clubUseCase_1.default(repository, encrypt, token, fixtureRepository, ticketRepository);
const fixtureCase = new fixtureUseCase_1.default(fixtureRepository, repository, stadiumRepository, paymentRepository, schedule, userRepository);
const controller = new clubController_1.default(clubCase, email, otp, cloudinary);
const fixtureController = new fixtureController_1.default(fixtureCase, cloudinary);
const router = express_1.default.Router();
router.post('/signup', multer_1.ImageUpload.single('image'), (req, res) => controller.signup(req, res));
router.post('/verify', (req, res) => controller.clubVerification(req, res));
router.post('/resendOtp', (req, res) => controller.resendOtp(req, res));
router.post('/login', (req, res) => controller.login(req, res));
router.post('/logout', (req, res) => controller.logout(req, res));
router.get('/profile', clubAuth_1.protect, (req, res) => controller.profile(req, res));
router.put('/profile', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => controller.updateProfile(req, res));
router.put('/background', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => controller.updateBackgroundImg(req, res));
router.post('/fixtureFormContent', clubAuth_1.protect, (req, res) => fixtureController.getFixtureFormContent(req, res));
router.post('/createNewFixture', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => fixtureController.createNewFixture(req, res));
router.get('/getFixtures', clubAuth_1.protect, (req, res) => fixtureController.getClubFixtures(req, res));
router.put('/cancelFixture/:id', clubAuth_1.protect, (req, res) => fixtureController.cancelFixture(req, res));
router.get('/getTeam', clubAuth_1.protect, (req, res) => controller.getTeamData(req, res));
router.post('/addManager', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => controller.addTeamManager(req, res));
router.put('/editManager', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => controller.editTeamManager(req, res));
router.post('/addPlayer', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => controller.addNewPlayer(req, res));
router.put('/editPlayer', clubAuth_1.protect, multer_1.ImageUpload.single('image'), (req, res) => controller.editPlayer(req, res));
router.delete('/deletePlayer/:id', clubAuth_1.protect, (req, res) => controller.deletePlayer(req, res));
router.put('/changeXI/:p1Id/:p2Id', clubAuth_1.protect, (req, res) => controller.changeStartingXI(req, res));
router.get('/dashboard', clubAuth_1.protect, (req, res) => controller.dashboardProfitAndExpenseContent(req, res));
router.get('/dashboard2', clubAuth_1.protect, (req, res) => controller.dashboardContent(req, res));
router.post('/forgotPassword', (req, res) => controller.forgotPassword(req, res));
router.post('/validateForgotOtp', (req, res) => controller.forgotOtpVerify(req, res));
router.put('/forgotPassword', (req, res) => controller.forgotChangePassword(req, res));
exports.default = router;
